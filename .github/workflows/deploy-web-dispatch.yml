name: Deploy Next.js (apps/web) â€” Manual

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Environment to deploy"
        type: choice
        options: [qa, prod]
        required: true
      branch:
        description: "Branch to deploy"
        type: choice
        options: [develop, main, custom]
        required: true
      custom_ref:
        description: "Custom ref (branch, tag, or commit SHA). Used only when branch=custom"
        required: false
        default: ""

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    environment: ${{ inputs.env == 'prod' && 'Production' || 'QA' }}
    runs-on: ubuntu-latest

    # Resolve the ref: use selected branch, or the provided custom_ref
    env:
      RESOLVED_REF: ${{ inputs.branch == 'custom' && inputs.custom_ref || inputs.branch }}

    steps:
      - name: Checkout ref
        uses: actions/checkout@v4
        with:
          ref: ${{ env.RESOLVED_REF }}

      - name: Validate ref exists on origin
        run: |
          git ls-remote --exit-code origin "${{ env.RESOLVED_REF }}" || {
            echo "Ref '${{ env.RESOLVED_REF }}' not found on origin"; exit 1;
          }

      - name: Use Node 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
          cache-dependency-path: |
            pnpm-lock.yaml
            **/pnpm-lock.yaml

      # Fix: ensure pnpm is available on PATH
      - name: Setup pnpm (Corepack)
        run: |
          corepack enable
          corepack prepare pnpm@9 --activate
          pnpm --version

      - name: Install dependencies (monorepo root)
        run: pnpm install --frozen-lockfile

      # Make framework detection unambiguous: write firebase.json inside apps/web
      - name: Write firebase.json (apps/web)
        run: |
          mkdir -p apps/web
          cat > apps/web/firebase.json << JSON
          {
            "hosting": [
              {
                "site": "${{ secrets.FIREBASE_SITE_ID }}",
                "source": "."
              }
            ]
          }
          JSON

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          entryPoint: apps/web
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          firebaseServiceAccount: |
            {
              "type": "service_account",
              "project_id": "${{ secrets.FIREBASE_PROJECT_ID }}",
              "client_email": "${{ secrets.FIREBASE_CLIENT_EMAIL }}",
              "private_key": "${{ secrets.FIREBASE_PRIVATE_KEY }}"
            }
          repoToken: ${{ secrets.GITHUB_TOKEN }}
        env:
          NEXT_TELEMETRY_DISABLED: "1"
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_EMAIL_LINK_CONTINUE_URL: ${{ secrets.NEXT_PUBLIC_EMAIL_LINK_CONTINUE_URL }}

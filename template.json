
> @cottonbro/infra@ synth /Applications/Work/Cotton Bro/cottonbro/infra
> cdk synth

Resources:
  UserPoolV2AAED3EE9:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_phone_number
            Priority: 1
          - Name: verified_email
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      LambdaConfig:
        PreSignUp:
          Fn::GetAtt:
            - PreSignUpLinkFn34C77C84
            - Arn
      Schema:
        - Mutable: false
          Name: email
          Required: true
      SmsVerificationMessage: The verification code to your new account is {####}
      UserPoolName: cottonbro-users-v2
      UsernameAttributes:
        - email
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/UserPoolV2/Resource
  UserPoolV2HostedUiDomain9C344E61:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: cottonbro
      UserPoolId:
        Ref: UserPoolV2AAED3EE9
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/UserPoolV2/HostedUiDomain/Resource
  UserPoolV2PreSignUpCognito61F8B291:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - PreSignUpLinkFn34C77C84
          - Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - UserPoolV2AAED3EE9
          - Arn
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/UserPoolV2/PreSignUpCognito
  GoogleIdP776058BD:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      AttributeMapping:
        email: email
        given_name: given_name
        family_name: family_name
      ProviderDetails:
        client_id:
          Fn::Join:
            - ""
            - - "{{resolve:secretsmanager:arn:"
              - Ref: AWS::Partition
              - ":secretsmanager:eu-west-1:"
              - Ref: AWS::AccountId
              - :secret:cottonbro/google-oauth:SecretString:clientId::}}
        client_secret:
          Fn::Join:
            - ""
            - - "{{resolve:secretsmanager:arn:"
              - Ref: AWS::Partition
              - ":secretsmanager:eu-west-1:"
              - Ref: AWS::AccountId
              - :secret:cottonbro/google-oauth:SecretString:clientSecret::}}
        authorize_scopes: openid email profile
      ProviderName: Google
      ProviderType: Google
      UserPoolId:
        Ref: UserPoolV2AAED3EE9
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/GoogleIdP/Resource
  PreSignUpLinkFnServiceRole50623290:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/PreSignUpLinkFn/ServiceRole/Resource
  PreSignUpLinkFnServiceRoleDefaultPolicyF04EB487:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cognito-idp:ListUsers
              - cognito-idp:AdminLinkProviderForUser
              - cognito-idp:AdminUpdateUserAttributes
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: PreSignUpLinkFnServiceRoleDefaultPolicyF04EB487
      Roles:
        - Ref: PreSignUpLinkFnServiceRole50623290
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/PreSignUpLinkFn/ServiceRole/DefaultPolicy/Resource
  PreSignUpLinkFn34C77C84:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1
        S3Key: 28acd469c7cbe830898b41753e7a3e51e447d90d57125f85a5e33e486e9b7a68.zip
      Description: PreSignUp trigger to link social identities to existing local users
      Handler: index.handler
      MemorySize: 256
      Role:
        Fn::GetAtt:
          - PreSignUpLinkFnServiceRole50623290
          - Arn
      Runtime: nodejs20.x
      Timeout: 10
    DependsOn:
      - PreSignUpLinkFnServiceRoleDefaultPolicyF04EB487
      - PreSignUpLinkFnServiceRole50623290
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/PreSignUpLinkFn/Resource
      aws:asset:path: asset.28acd469c7cbe830898b41753e7a3e51e447d90d57125f85a5e33e486e9b7a68
      aws:asset:is-bundled: true
      aws:asset:property: Code
  WebClient697086FD:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AccessTokenValidity: 60
      AllowedOAuthFlows:
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - openid
        - email
        - profile
      CallbackURLs:
        - http://localhost:5173/auth/callback
      ClientName: web-spa
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false
      IdTokenValidity: 60
      LogoutURLs:
        - http://localhost:5173/
      PreventUserExistenceErrors: ENABLED
      RefreshTokenValidity: 43200
      SupportedIdentityProviders:
        - COGNITO
        - Google
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: minutes
      UserPoolId:
        Ref: UserPoolV2AAED3EE9
    DependsOn:
      - GoogleIdP776058BD
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/WebClient/Resource
  AdminClient3A00DBAE:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AccessTokenValidity: 60
      AllowedOAuthFlows:
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - openid
        - email
        - profile
      CallbackURLs:
        - http://localhost:5174/auth/callback
      ClientName: admin-spa
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false
      IdTokenValidity: 60
      LogoutURLs:
        - http://localhost:5174/
      PreventUserExistenceErrors: ENABLED
      RefreshTokenValidity: 43200
      SupportedIdentityProviders:
        - COGNITO
        - Google
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: minutes
      UserPoolId:
        Ref: UserPoolV2AAED3EE9
    DependsOn:
      - GoogleIdP776058BD
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/AdminClient/Resource
  MainTable74195DAB:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/MainTable/Resource
  Assets9A31D427:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/Assets/Resource
  AssetsPolicy206C37E3:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: Assets9A31D427
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - Assets9A31D427
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - Assets9A31D427
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/Assets/Policy/Resource
  ApiFnServiceRoleD18AAE0E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/ApiFn/ServiceRole/Resource
  ApiFnServiceRoleDefaultPolicy56A1E6E5:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - MainTable74195DAB
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Assets9A31D427
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - Assets9A31D427
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: ApiFnServiceRoleDefaultPolicy56A1E6E5
      Roles:
        - Ref: ApiFnServiceRoleD18AAE0E
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/ApiFn/ServiceRole/DefaultPolicy/Resource
  ApiFnE0725F78:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: "

          \        exports.handler = async (event) => ({

          \          statusCode: 200,

          \          headers: { \"content-type\": \"application/json\" },

          \          body: JSON.stringify({ ok: true, path: event.rawPath || \"/\", note: \"placeholder API\" })

          \        });

          \      "
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MainTable74195DAB
          USER_POOL_ID:
            Ref: UserPoolV2AAED3EE9
          BUCKET_NAME:
            Ref: Assets9A31D427
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - ApiFnServiceRoleD18AAE0E
          - Arn
      Runtime: nodejs20.x
    DependsOn:
      - ApiFnServiceRoleDefaultPolicy56A1E6E5
      - ApiFnServiceRoleD18AAE0E
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/ApiFn/Resource
  HttpApiF5A9A8A7:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: cottonbro-api
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/HttpApi/Resource
  HttpApiDefaultStage3EEB07D6:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: HttpApiF5A9A8A7
      AutoDeploy: true
      StageName: $default
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/HttpApi/DefaultStage/Resource
  HttpApiANYproxyApiInt0CE08F9A:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HttpApiF5A9A8A7
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ApiFnE0725F78
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/HttpApi/ANY--{proxy+}/ApiInt/Resource
  HttpApiANYproxyApiIntPermission7B1D8662:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ApiFnE0725F78
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:eu-west-1:"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HttpApiF5A9A8A7
            - /*/*/{proxy+}
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/HttpApi/ANY--{proxy+}/ApiInt-Permission
  HttpApiANYproxy435A1FB9:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpApiF5A9A8A7
      AuthorizationType: NONE
      RouteKey: ANY /{proxy+}
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HttpApiANYproxyApiInt0CE08F9A
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/HttpApi/ANY--{proxy+}/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/12Q0W7CMAxFv2XvIYOyfQAwbeNlq8r2jNzWVIY2qWoXVEX99ykJZYine659ncRJ9OJ1oedPcOFZUZ5mNeXa7QSKk4IL711hK0Nitftl7FJra7U5mBtP8GYbIHPfulYmuy3RCMmQdvZMJXYf1lY13g88Jm6jm5rQyH00VkZVQ5OXoN3mYFLsGmImGx7x3ptCPE8wZffGlnhk/RXkFiNotMtsfFDQ1NZUDN5GGhUv98CMwnrlRfFSu3VfnFDWwKgi+oErRfk/596PqhwMNLbMtfuBPN4bYFTQUgWCFxjOiXafIu2qJd/34u1OoAoDEXwps71E2hrBqgO5fsSDDblxVBmy7bsCVVjFn0Om8oHvXto+bDFFRuW/TB/5+ZwkevGi509HJpp1vRFqUGdR/wCZXdxpRwIAAA==
    Metadata:
      aws:cdk:path: cottonbro-eu-west-1/CDKMetadata/Default
Outputs:
  UserPoolId:
    Value:
      Ref: UserPoolV2AAED3EE9
  WebClientId:
    Value:
      Ref: WebClient697086FD
  AdminClientId:
    Value:
      Ref: AdminClient3A00DBAE
  HostedUiDomainBaseUrl:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: UserPoolV2HostedUiDomain9C344E61
          - .auth.eu-west-1.amazoncognito.com
  HttpApiUrl:
    Value:
      Fn::GetAtt:
        - HttpApiF5A9A8A7
        - ApiEndpoint
  AssetsBucket:
    Value:
      Ref: Assets9A31D427
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

